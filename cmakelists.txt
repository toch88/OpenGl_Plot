cmake_minimum_required(VERSION 3.0.0)
project(One_Triangle VERSION 0.0.0)

include(CTest)

include_directories(C:/msys64/mingw64/include)
include_directories(/src)
include_directories(/src/vendor/stb_image)
include_directories(/src/vendor/glm)

link_directories(C:/msys64/usr/lib/w32api/)
link_directories(C:/msys64/mingw64/lib/)

add_library(OPENGL STATIC IMPORTED)
set_target_properties(OPENGL PROPERTIES
  IMPORTED_LOCATION "C:/msys64/usr/lib/w32api/libopengl32.a"  
)
# find_library(OPENGL opengl32)
 find_library(GLFW NAMES libglfw3.a PATHS C:/msys64/mingw64/lib/libglfw3)
# find_library(GLEW glew32 C:/msys64/mingw64/lib/)


add_definitions(-DGLEW_STATIC)
add_definitions(-D_WIN32=1)
add_definitions(-Dfpermissive)


set(SOURCE_DIR src/)
set(SOURCE 
${SOURCE_DIR}VertexBuffer.cpp
${SOURCE_DIR}IndexBuffer.cpp
${SOURCE_DIR}VertexArray.cpp
${SOURCE_DIR}VertexBufferLayout.cpp
${SOURCE_DIR}Shader.cpp
${SOURCE_DIR}Renderer.cpp
${SOURCE_DIR}DisplayManager.cpp
${SOURCE_DIR}RawModel.cpp
${SOURCE_DIR}Loader.cpp
${SOURCE_DIR}vendor/stb_image/stb_image.cpp
${SOURCE_DIR}Texture.cpp
${SOURCE_DIR}TexturedModel.cpp
${SOURCE_DIR}ResourceManager.cpp
${SOURCE_DIR}LineSegment.cpp
${SOURCE_DIR}Grid.cpp
${SOURCE_DIR}TextureWrapper.cpp
${SOURCE_DIR}EventDispatcher.cpp
${SOURCE_DIR}TimerListener.cpp
${SOURCE_DIR}Timer.cpp
)

# ${OPENGL} ${GLFW3} ${GLEW}
add_executable(One_Triangle main.cpp ${SOURCE})
# message("======${OPENGL} ===========")
# message("------${GLFW3} ------------")
# message("------${GLEW} -------------")
target_link_libraries(One_Triangle libglfw3.a)
target_link_libraries(One_Triangle OPENGL)
target_link_libraries(One_Triangle libglew32.a)

set(CPACK_PROJECT_NAME ${PROJECT_NAME})
set(CPACK_PROJECT_VERSION ${PROJECT_VERSION})
include(CPack)
